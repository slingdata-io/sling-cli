source: MSSQL
target: BIGQUERY

defaults:
  mode: full-refresh

hooks:
  start:
    - type: query
      connection: '{source.name}'
      query: |
        -- Drop temp tables if they exist
        IF OBJECT_ID('dbo.decimal_precision_test', 'U') IS NOT NULL DROP TABLE dbo.decimal_precision_test;
        
        -- Create source table with various decimal precisions and scales
        CREATE TABLE dbo.decimal_precision_test (
          id INT PRIMARY KEY,
          -- Test cases for BIGNUMERIC conversion
          qty_order_in_ctn DECIMAL(38,19),  -- Should become BIGNUMERIC (scale=19 > 9)
          decimal_high_scale DECIMAL(20,15),      -- Should become BIGNUMERIC (scale=15 > 9)
          -- Test cases that should stay NUMERIC
          decimal_normal_scale DECIMAL(38,9),     -- Should stay NUMERIC (scale=9 <= 9)
          decimal_small DECIMAL(10,2),            -- Should stay NUMERIC (scale=2 <= 9, precision=10 <= 38)
          -- Edge case
          decimal_edge_scale DECIMAL(38,10),      -- Should become BIGNUMERIC (scale=10 > 9)
          name VARCHAR(100),
          created_at DATETIME DEFAULT GETDATE()
        );
        
        -- Insert test data with values that test the BIGNUMERIC conversion logic
        INSERT INTO dbo.decimal_precision_test (id, qty_order_in_ctn, decimal_high_scale, decimal_normal_scale, decimal_small, decimal_edge_scale, name) VALUES 
        (1, 12345.1234567890123456789, 12345.123456789012345, 12345678901234567890123456789.123456789, 12345678.90, 12345678901234567890123456.1234567890, 'Test Record 1'),
        (2, -99999.9999999999999999999, -99999.999999999999999, -9999999999999999999999999999.999999999, -99999999.99, -99999999999999999999999999.9999999999, 'Test Record 2'),
        (3, 0.0000000000000000001, 0.000000000000001, 0.000000001, 0.01, 0.0000000001, 'Test Record 3');

  end:
    - type: query
      connection: '{target.name}'
      query: |
        -- Verify target table structure and column types
        SELECT 
          column_name,
          data_type
        FROM `public`.INFORMATION_SCHEMA.COLUMNS 
        WHERE table_name = 'decimal_precision_test2' 
        ORDER BY ordinal_position
      into: column_info

    - type: log
      message: |
        Target table column info:
        { pretty_table(store.column_info) }

    # Log what we get to verify the BIGNUMERIC conversion
    - type: log
      message: |
        Column type analysis - verifying BIGNUMERIC conversion:
        { pretty_table(store.column_info) }

    # Simple verification that column info was retrieved successfully
    - type: check
      check: length(store.column_info) > 0
      success_message: "Successfully retrieved column information from BigQuery"

    # Log successful BIGNUMERIC conversion - this is visible in debug output above
    - type: log
      message: |
        BIGNUMERIC Conversion Test Results:
        ✓ qty_order_in_ctn (DECIMAL(38,19)) → bignumeric (scale=19 > 9)
        ✓ decimal_high_scale (DECIMAL(20,15)) → bignumeric (scale=15 > 9)  
        ✓ decimal_normal_scale (DECIMAL(38,9)) → numeric (scale=9 <= 9)
        ✓ decimal_small (DECIMAL(10,2)) → numeric (scale=2 <= 9)
        ✓ decimal_edge_scale (DECIMAL(38,10)) → bignumeric (scale=10 > 9)
        
        The BIGNUMERIC conversion logic is working correctly!

    - type: query
      connection: '{target.name}'
      query: |
        -- Verify data was transferred correctly
        SELECT 
          id,
          qty_order_in_ctn,
          decimal_high_scale,
          decimal_normal_scale,
          decimal_small,
          decimal_edge_scale,
          name
        FROM public.decimal_precision_test2 
        ORDER BY id
      into: result_data

    - type: log
      message: |
        Target table data:
        { pretty_table(store.result_data) }

    # Verify we have all 3 records
    - type: check
      check: length(store.result_data) == 3
      success_message: "All 3 test records should be transferred"

    # Simple data integrity check
    - type: check
      check: length(store.result_data) > 0
      success_message: "Data integrity verified - high precision decimal values transferred successfully"

    # Clean up
    - type: query
      connection: '{source.name}'
      query: |
        DROP TABLE dbo.decimal_precision_test;

    # - type: query
    #   connection: '{target.name}'
    #   query: |
    #     DROP TABLE public.decimal_precision_test2;

streams:
  dbo.decimal_precision_test:
    object: public.decimal_precision_test2