source: MSSQL
target: POSTGRES

defaults:
  mode: full-refresh

hooks:
  start:
    - type: query
      connection: '{source.name}'
      query: |
        -- Drop temp tables if they exist
        IF OBJECT_ID('dbo.unique_identifier_test', 'U') IS NOT NULL DROP TABLE dbo.unique_identifier_test;
        
        -- Create source table with uniqueidentifier column
        CREATE TABLE dbo.unique_identifier_test (
          id INT PRIMARY KEY,
          guid_col UNIQUEIDENTIFIER DEFAULT NEWID(),
          name VARCHAR(100),
          created_at DATETIME DEFAULT GETDATE()
        );
        
        -- Insert test data with specific GUIDs
        INSERT INTO dbo.unique_identifier_test (id, guid_col, name) VALUES 
        (1, '6F9619FF-8B86-D011-B42D-00C04FC964FF', 'Test Record 1'),
        (2, 'A0E44FF6-8B86-D011-B42D-00C04FC964FF', 'Test Record 2'),
        (3, NEWID(), 'Test Record 3'),
        (4, NULL, 'Test Record 4 with NULL GUID'),
        (5, '12345678-1234-5678-1234-567812345678', 'Test Record 5');

  end:
    - type: query
      connection: '{target.name}'
      query: |
        -- Verify target table structure
        SELECT
          c.COLUMN_NAME,
          c.DATA_TYPE,
          c.CHARACTER_MAXIMUM_LENGTH,
          c.IS_NULLABLE
        FROM INFORMATION_SCHEMA.COLUMNS c
        WHERE c.TABLE_SCHEMA = 'public'
          AND c.TABLE_NAME = 'unique_identifier_test2'
          AND c.COLUMN_NAME = 'guid_col'
      into: column_info

    - type: log
      message: |
        Target column info:
        {store.column_info}

    - type: check
      check: store.column_info[0].data_type == "uuid"
      success_message: "guid_col should be 'uuid' type in target PostgreSQL"

    - type: query
      connection: '{target.name}'
      query: |
        -- Get all target data
        SELECT
          id,
          guid_col::text as guid_text,
          name
        FROM public.unique_identifier_test2
        ORDER BY id
      into: target_data

    - type: log
      message: |
        Target data:
        {store.target_data}

    - type: check
      check: upper(store.target_data[0].guid_text) == "6F9619FF-8B86-D011-B42D-00C04FC964FF"
      success_message: "GUID value for record 1 matches"

    - type: check
      check: upper(store.target_data[1].guid_text) == "A0E44FF6-8B86-D011-B42D-00C04FC964FF"
      success_message: "GUID value for record 2 matches"

    - type: check
      check: length(store.target_data[2].guid_text) == 36
      success_message: "GUID value for record 3 has valid format"

    - type: check
      check: store.target_data[3].guid_text == nil
      success_message: "GUID value for record 4 is NULL as expected"

    - type: check
      check: upper(store.target_data[4].guid_text) == "12345678-1234-5678-1234-567812345678"
      success_message: "GUID value for record 5 matches"

    - type: query
      connection: '{source.name}'
      query: DROP TABLE dbo.unique_identifier_test;

    - type: query
      connection: '{target.name}'
      query: DROP TABLE public.unique_identifier_test2;

streams:
  dbo.unique_identifier_test:
    object: public.unique_identifier_test2